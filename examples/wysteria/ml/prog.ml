open AST

open FFI

let const_meta = AST.Meta ([], AST.Can_b, [], AST.Can_w)

let program = mk_let (mk_varname "alice_s" (T_eprins)) (mk_ffi 1 "FFI.singleton" (FFI.singleton) [  (mk_var "alice" (T_prin)); ] (fun x -> D_v (const_meta, V_eprins x))) (mk_let (mk_varname "bob_s" (T_eprins)) (mk_ffi 1 "FFI.singleton" (FFI.singleton) [  (mk_var "bob" (T_prin)); ] (fun x -> D_v (const_meta, V_eprins x))) (mk_let (mk_varname "ab" (T_cons ("Prins.eprins", []))) (mk_ffi 2 "FFI.union" (FFI.union) [  (mk_var "alice_s" (T_eprins)); (mk_var "bob_s" (T_eprins)); ] (fun x -> D_v (const_meta, V_eprins x))) (mk_let (mk_varname "to_s2" (T_unknown)) (mk_abs (mk_varname "p1" (T_prin)) (mk_abs (mk_varname "p2" (T_prin)) (mk_ffi 2 "FFI.union" (FFI.union) [  (mk_ffi 1 "FFI.singleton" (FFI.singleton) [  (mk_var "p1" (T_prin)); ] (fun x -> D_v (const_meta, V_eprins x))); (mk_ffi 1 "FFI.singleton" (FFI.singleton) [  (mk_var "p2" (T_prin)); ] (fun x -> D_v (const_meta, V_eprins x))); ] (fun x -> D_v (const_meta, V_eprins x))))) (mk_let (mk_varname "read_fn" (T_unknown)) (mk_abs (mk_varname "_15_17" (T_prin)) (mk_abs (mk_varname "_15_19" (T_unit)) (mk_ffi 1 "FFI.read_int_list" FFI.read_int_list [ E_const (C_unit ()) ] (fun x -> mk_v_opaque x (slice_list slice_id) (compose_lists compose_ids) (slice_list_sps slice_id_sps))))) (mk_let (mk_varname "nth" (T_unknown)) (mk_fix (mk_varname "nth" (T_unknown)) (mk_varname "n" (T_cons ("Prims.nat", []))) (mk_abs (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_cond (mk_ffi 2 "Prims.op_Equality" (Prims.op_Equality) [  (mk_var "n" (T_cons ("Prims.nat", []))); (mk_const (C_opaque ((), Obj.magic 0, T_cons ("Prims.int", [])))); ] (fun x -> D_v (const_meta, V_bool x))) (mk_ffi 1 "FFI.hd_of_cons" (FFI.hd_of_cons) [  (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps)) (mk_app (mk_app (mk_var "nth" (T_unknown)) (mk_ffi 2 "Prims.(-)" (Prims.(-)) [  (mk_var "n" (T_cons ("Prims.nat", []))); (mk_const (C_opaque ((), Obj.magic 1, T_cons ("Prims.int", [])))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps))) (mk_ffi 1 "FFI.tl_of_cons" (FFI.tl_of_cons) [  (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))); ] (fun x -> mk_v_opaque x (slice_list slice_id) (compose_lists compose_ids) (slice_list_sps slice_id_sps))))))) (mk_let (mk_varname "mem_begin" (T_unknown)) (mk_fix (mk_varname "mem_begin" (T_unknown)) (mk_varname "x" (T_cons ("Prims.int", []))) (mk_abs (mk_varname "n" (T_cons ("Prims.nat", []))) (mk_abs (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_const (C_unit ()))))) (mk_let (mk_varname "mem" (T_unknown)) (mk_fix (mk_varname "mem" (T_unknown)) (mk_varname "x" (T_box (T_cons ("Prims.int", [])))) (mk_abs (mk_varname "l" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_abs (mk_varname "len" (T_cons ("Prims.nat", []))) (mk_abs (mk_varname "n" (T_cons ("Prims.nat", []))) (mk_cond (mk_ffi 2 "Prims.op_Equality" (Prims.op_Equality) [  (mk_var "n" (T_cons ("Prims.nat", []))); (mk_var "len" (T_cons ("Prims.nat", []))); ] (fun x -> D_v (const_meta, V_bool x))) (mk_ffi 2 "FFI.mk_tuple" (FFI.mk_tuple) [  (mk_const (C_bool false)); (mk_const (C_opaque ((), Obj.magic 0, T_cons ("Prims.int", [])))); ] (fun x -> mk_v_opaque x ((slice_tuple slice_id) slice_id) ((compose_tuples compose_ids) compose_ids) ((slice_tuple_sps slice_id_sps) slice_id_sps))) (mk_let (mk_varname "g" (T_unknown)) (mk_abs (mk_varname "_15_49" (T_unit)) (mk_let (mk_varname "_33_56" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_unbox (mk_var "l" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_app (mk_app (mk_var "nth" (T_unknown)) (mk_var "n" (T_cons ("Prims.nat", [])))) (mk_var "_33_56" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))))) (mk_let (mk_varname "y" (T_box (T_cons ("Prims.int", [])))) (mk_aspar (mk_var "bob_s" (T_eprins)) (mk_var "g" (T_unknown))) (mk_let (mk_varname "_15_58" (T_unit)) (mk_const (C_unit ())) (mk_let (mk_varname "cmp" (T_unknown)) (mk_abs (mk_varname "_15_60" (T_unit)) (mk_ffi 2 "Prims.op_Equality" (Prims.op_Equality) [  (mk_unbox (mk_var "x" (T_box (T_cons ("Prims.int", []))))); (mk_unbox (mk_var "y" (T_box (T_cons ("Prims.int", []))))); ] (fun x -> D_v (const_meta, V_bool x)))) (mk_let (mk_varname "p" (T_bool)) (mk_assec (mk_var "ab" (T_cons ("Prins.eprins", []))) (mk_var "cmp" (T_unknown))) (mk_cond (mk_var "p" (T_bool)) (mk_let (mk_varname "get" (T_unknown)) (mk_abs (mk_varname "_15_69" (T_unit)) (mk_unbox (mk_var "x" (T_box (T_cons ("Prims.int", [])))))) (mk_let (mk_varname "v" (T_cons ("Prims.int", []))) (mk_assec (mk_var "ab" (T_cons ("Prins.eprins", []))) (mk_var "get" (T_unknown))) (mk_ffi 2 "FFI.mk_tuple" (FFI.mk_tuple) [  (mk_const (C_bool true)); (mk_var "v" (T_cons ("Prims.int", []))); ] (fun x -> mk_v_opaque x ((slice_tuple slice_id) slice_id) ((compose_tuples compose_ids) compose_ids) ((slice_tuple_sps slice_id_sps) slice_id_sps))))) (mk_app (mk_app (mk_app (mk_app (mk_var "mem" (T_unknown)) (mk_var "x" (T_box (T_cons ("Prims.int", []))))) (mk_var "l" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "len" (T_cons ("Prims.nat", [])))) (mk_ffi 2 "Prims.(+)" (Prims.(+)) [  (mk_var "n" (T_cons ("Prims.nat", []))); (mk_const (C_opaque ((), Obj.magic 1, T_cons ("Prims.int", [])))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps)))))))))))))) (mk_let (mk_varname "lmem" (T_unknown)) (mk_abs (mk_varname "x" (T_cons ("Prims.int", []))) (mk_abs (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_const (C_unit ())))) (mk_let (mk_varname "psi" (T_unknown)) (mk_fix (mk_varname "psi" (T_unknown)) (mk_varname "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_abs (mk_varname "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_abs (mk_varname "len1" (T_cons ("Prims.nat", []))) (mk_abs (mk_varname "len2" (T_cons ("Prims.nat", []))) (mk_abs (mk_varname "n1" (T_cons ("Prims.nat", []))) (mk_let (mk_varname "_15_102" (T_unit)) (mk_const (C_unit ())) (mk_cond (mk_ffi 2 "Prims.op_Equality" (Prims.op_Equality) [  (mk_var "n1" (T_cons ("Prims.nat", []))); (mk_var "len1" (T_cons ("Prims.nat", []))); ] (fun x -> D_v (const_meta, V_bool x))) (mk_ffi 1 "FFI.mk_nil" (FFI.mk_nil) [  (mk_const (C_unit ())); ] (fun x -> mk_v_opaque x (slice_list slice_id) (compose_lists compose_ids) (slice_list_sps slice_id_sps))) (mk_let (mk_varname "g" (T_unknown)) (mk_abs (mk_varname "_15_104" (T_unit)) (mk_let (mk_varname "_33_133" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_unbox (mk_var "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_app (mk_app (mk_var "nth" (T_unknown)) (mk_var "n1" (T_cons ("Prims.nat", [])))) (mk_var "_33_133" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))))) (mk_let (mk_varname "x" (T_box (T_cons ("Prims.int", [])))) (mk_aspar (mk_var "alice_s" (T_eprins)) (mk_var "g" (T_unknown))) (mk_let (mk_varname "p" (T_cons ("Prims.Tuple2", [ (T_bool); (T_cons ("Prims.int", []));]))) (mk_app (mk_app (mk_app (mk_app (mk_var "mem" (T_unknown)) (mk_var "x" (T_box (T_cons ("Prims.int", []))))) (mk_var "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "len2" (T_cons ("Prims.nat", [])))) (mk_const (C_opaque ((), Obj.magic 0, T_cons ("Prims.int", []))))) (mk_let (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_app (mk_app (mk_app (mk_app (mk_app (mk_var "psi" (T_unknown)) (mk_var "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "len1" (T_cons ("Prims.nat", [])))) (mk_var "len2" (T_cons ("Prims.nat", [])))) (mk_ffi 2 "Prims.(+)" (Prims.(+)) [  (mk_var "n1" (T_cons ("Prims.nat", []))); (mk_const (C_opaque ((), Obj.magic 1, T_cons ("Prims.int", [])))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps))) (mk_cond (mk_ffi 1 "Prims.fst" (Prims.fst) [  (mk_var "p" (T_cons ("Prims.Tuple2", [ (T_bool); (T_cons ("Prims.int", []));]))); ] (fun x -> D_v (const_meta, V_bool x))) (mk_ffi 2 "FFI.mk_cons" (FFI.mk_cons) [  (mk_ffi 1 "Prims.snd" (Prims.snd) [  (mk_var "p" (T_cons ("Prims.Tuple2", [ (T_bool); (T_cons ("Prims.int", []));]))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps)); (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))); ] (fun x -> mk_v_opaque x (slice_list slice_id) (compose_lists compose_ids) (slice_list_sps slice_id_sps))) (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))))))))))))) (mk_let (mk_varname "psi_m" (T_unknown)) (mk_abs (mk_varname "_15_115" (T_unit)) (mk_let (mk_varname "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_aspar (mk_var "alice_s" (T_eprins)) (mk_app (mk_var "read_fn" (T_unknown)) (mk_var "alice" (T_prin)))) (mk_let (mk_varname "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_aspar (mk_var "bob_s" (T_eprins)) (mk_app (mk_var "read_fn" (T_unknown)) (mk_var "bob" (T_prin)))) (mk_let (mk_varname "len" (T_unknown)) (mk_abs (mk_varname "_15_119" (T_prin)) (mk_abs (mk_varname "l" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))) (mk_abs (mk_varname "_15_122" (T_unit)) (mk_let (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_unbox (mk_var "l" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_ffi 1 "FFI.length" (FFI.length) [  (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))); ] (fun x -> mk_v_opaque x slice_id compose_ids slice_id_sps)))))) (mk_let (mk_varname "n1" (T_box (T_cons ("Prims.int", [])))) (mk_aspar (mk_var "alice_s" (T_eprins)) (mk_app (mk_app (mk_var "len" (T_unknown)) (mk_var "alice" (T_prin))) (mk_var "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))))) (mk_let (mk_varname "n2" (T_box (T_cons ("Prims.int", [])))) (mk_aspar (mk_var "bob_s" (T_eprins)) (mk_app (mk_app (mk_var "len" (T_unknown)) (mk_var "bob" (T_prin))) (mk_var "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))))) (mk_let (mk_varname "g" (T_unknown)) (mk_abs (mk_varname "p" (T_prin)) (mk_abs (mk_varname "n" (T_box (T_cons ("Prims.int", [])))) (mk_abs (mk_varname "_15_137" (T_unit)) (mk_unbox (mk_var "n" (T_box (T_cons ("Prims.int", [])))))))) (mk_let (mk_varname "n1'" (T_cons ("Prims.int", []))) (mk_assec (mk_var "ab" (T_cons ("Prins.eprins", []))) (mk_app (mk_app (mk_var "g" (T_unknown)) (mk_var "alice" (T_prin))) (mk_var "n1" (T_box (T_cons ("Prims.int", [])))))) (mk_let (mk_varname "n2'" (T_cons ("Prims.int", []))) (mk_assec (mk_var "ab" (T_cons ("Prins.eprins", []))) (mk_app (mk_app (mk_var "g" (T_unknown)) (mk_var "bob" (T_prin))) (mk_var "n2" (T_box (T_cons ("Prims.int", [])))))) (mk_let (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_app (mk_app (mk_app (mk_app (mk_app (mk_var "psi" (T_unknown)) (mk_var "l1" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "l2" (T_box (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))))) (mk_var "n1'" (T_cons ("Prims.int", [])))) (mk_var "n2'" (T_cons ("Prims.int", [])))) (mk_const (C_opaque ((), Obj.magic 0, T_cons ("Prims.int", []))))) (mk_let (mk_varname "_15_152" (T_unit)) (mk_const (C_unit ())) (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));])))))))))))))) (mk_let (mk_varname "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))) (mk_app (mk_var "psi_m" (T_unknown)) (E_const (C_unit ()))) (mk_ffi 1 "FFI.print_int_list" (FFI.print_int_list) [  (mk_var "l" (T_cons ("Prims.list", [ (T_cons ("Prims.int", []));]))); ] (fun x -> D_v (const_meta, V_unit))))))))))))))

